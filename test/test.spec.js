const { Tezos } = require('@taquito/taquito')

const fs = require("fs");
const { email, password, mnemonic, secret } = JSON.parse(fs.readFileSync('./faucet.json').toString())
const { fa_address, network } = JSON.parse(fs.readFileSync("./deployed/latest.json").toString())
Tezos.setProvider({ rpc: network, confirmationPollingTimeoutSecond: 300 })
Tezos.importKey(email, password, mnemonic.join(" "), secret)
    .then(async () => {
        console.log(`Fecthcing contract ${fa_address} from chain`)
        const contract = await Tezos.contract.at(fa_address)
        console.log(`Transferring 2 asset tokens`)
        const pkh = await Tezos.signer.publicKeyHash()
        const op = await contract.methods.transfer(pkh, "tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh", "2").send()
        console.log(`Waiting on confirmation`)
        await op.confirmation()
        console.log(`Fetching balance of sender`)
        console.log((await (await contract.storage()).ledger.get(pkh)).balance)
        // // console.log((await (await contract.storage()).ledger.get("tz1Kz6VSEPNnKPiNvhyio6E1otbSdDhVD9qB")).balance)
        console.log(`Fetching balance of reciever`)
        console.log((await (await contract.storage()).ledger.get("tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh")).balance)

        console.log(`Approving allowance to transfer 2 tokens`)
        const op2 = await contract.methods.approve("tz1eY5Aqa1kXDFoiebL28emyXFoneAoVg1zh", "2").send()
        console.log(`Waiting on confirmation`)
        await op2.confirmation()
    })
